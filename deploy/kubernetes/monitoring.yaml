apiVersion: apps/v1
kind: Deployment
metadata:
  name: shardx-prometheus
  namespace: shardx
  labels:
    app: shardx-prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shardx-prometheus
  template:
    metadata:
      labels:
        app: shardx-prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        - name: prometheus-data
          mountPath: /prometheus
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: prometheus-config
        configMap:
          name: shardx-config
          items:
          - key: prometheus.yml
            path: prometheus.yml
      - name: prometheus-data
        persistentVolumeClaim:
          claimName: prometheus-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: shardx-prometheus
  namespace: shardx
  labels:
    app: shardx-prometheus
spec:
  ports:
  - port: 9090
    targetPort: 9090
  selector:
    app: shardx-prometheus
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-data-pvc
  namespace: shardx
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shardx-grafana
  namespace: shardx
  labels:
    app: shardx-grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shardx-grafana
  template:
    metadata:
      labels:
        app: shardx-grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "shardx"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
        - name: grafana-provisioning
          mountPath: /etc/grafana/provisioning
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "300m"
      volumes:
      - name: grafana-data
        persistentVolumeClaim:
          claimName: grafana-data-pvc
      - name: grafana-provisioning
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: shardx-grafana
  namespace: shardx
  labels:
    app: shardx-grafana
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app: shardx-grafana
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-data-pvc
  namespace: shardx
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard