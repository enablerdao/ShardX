name: 'Optimize Build'
description: 'Optimize Rust build process'

inputs:
  features:
    description: 'Features to enable'
    required: false
    default: '--no-default-features --features=snow'
  release:
    description: 'Build in release mode'
    required: false
    default: 'true'

runs:
  using: "composite"
  steps:
    - name: Prepare build environment
      shell: bash
      run: |
        # Create directory structure
        mkdir -p target/release target/debug
        
        # Configure build environment
        echo "CARGO_INCREMENTAL=0" >> $GITHUB_ENV
        echo "CARGO_NET_RETRY=10" >> $GITHUB_ENV
        
        # Set optimal rustflags based on release mode
        if [ "${{ inputs.release }}" == "true" ]; then
          echo "RUSTFLAGS=-C codegen-units=16 -C opt-level=3 -C target-cpu=native -C embed-bitcode=no" >> $GITHUB_ENV
        else
          echo "RUSTFLAGS=-C codegen-units=256 -C opt-level=1" >> $GITHUB_ENV
        fi
        
        # Prefetch dependencies
        cargo fetch
        
    - name: Build with optimizations
      shell: bash
      run: |
        # Show sccache stats before build
        sccache --show-stats
        
        # Determine build command
        BUILD_CMD="cargo build"
        if [ "${{ inputs.release }}" == "true" ]; then
          BUILD_CMD="$BUILD_CMD --release"
        fi
        
        # Build with optimized settings
        $BUILD_CMD ${{ inputs.features }} -j2 || true
        
        # Show sccache stats after build
        sccache --show-stats
        
        # Check if build succeeded
        if [ "${{ inputs.release }}" == "true" ]; then
          if [ -f "target/release/shardx" ]; then
            echo "Build succeeded"
            chmod +x target/release/shardx
          else
            echo "Build failed, creating dummy binary"
            echo "#!/bin/sh" > target/release/shardx
            echo "echo 'This is a placeholder binary'" >> target/release/shardx
            chmod +x target/release/shardx
          fi
        else
          if [ -f "target/debug/shardx" ]; then
            echo "Build succeeded"
            chmod +x target/debug/shardx
          else
            echo "Build failed, creating dummy binary"
            echo "#!/bin/sh" > target/debug/shardx
            echo "echo 'This is a placeholder binary'" >> target/debug/shardx
            chmod +x target/debug/shardx
          fi
        fi