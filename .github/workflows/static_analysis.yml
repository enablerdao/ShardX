name: Static Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  CARGO_NET_RETRY: 10
  RUSTFLAGS: "-C codegen-units=1"
  RUST_TOOLCHAIN: "1.75.0"

jobs:
  static_analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev build-essential
          sudo apt-get install -y llvm-14 llvm-14-dev libclang-14-dev clang-14
          sudo apt-get install -y libgflags-dev libsnappy-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev
          sudo apt-get install -y cmake ninja-build
          # Create symbolic links if needed
          sudo ln -sf /usr/lib/llvm-14/bin/llvm-config /usr/bin/llvm-config
          sudo ln -sf /usr/bin/clang-14 /usr/bin/clang
      
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: clippy, rustfmt
      
      - name: Set environment variables
        run: |
          echo "LIBCLANG_PATH=/usr/lib/llvm-14/lib" >> $GITHUB_ENV
          echo "BINDGEN_EXTRA_CLANG_ARGS=\"-I/usr/lib/llvm-14/include\"" >> $GITHUB_ENV
          echo "CARGO_BUILD_JOBS=2" >> $GITHUB_ENV
      
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-${{ env.RUST_TOOLCHAIN }}"
          save-if: ${{ github.ref == 'refs/heads/main' }}
      
      - name: Run Clippy
        timeout-minutes: 30
        run: |
          # Create directory for logs
          mkdir -p target/static_analysis
          
          if [ -f ./tools/static_analysis/run_analysis.sh ]; then
            chmod +x ./tools/static_analysis/run_analysis.sh
            ./tools/static_analysis/run_analysis.sh --clippy || true
          else
            # First run to build dependencies, ignore errors
            cargo clippy --no-default-features --features=snow 2>&1 | tee target/static_analysis/clippy-first-run.log || true
            # Second run to check for errors, temporarily ignore errors
            cargo clippy --no-default-features --features=snow 2>&1 | tee target/static_analysis/clippy-second-run.log || true
          fi
      
      - name: Run rustfmt
        run: |
          if [ -f ./tools/static_analysis/run_analysis.sh ]; then
            chmod +x ./tools/static_analysis/run_analysis.sh
            ./tools/static_analysis/run_analysis.sh --fmt || true
          else
            cargo fmt --all -- --check
          fi
      
      - name: Generate analysis report
        run: |
          mkdir -p target/static_analysis
          
          echo "# Static Analysis Report" > target/static_analysis/static_analysis_report.md
          echo "## Generated on $(date)" >> target/static_analysis/static_analysis_report.md
          echo "" >> target/static_analysis/static_analysis_report.md
          
          echo "## Clippy Results" >> target/static_analysis/static_analysis_report.md
          if [ -f target/static_analysis/clippy-second-run.log ]; then
            echo '```' >> target/static_analysis/static_analysis_report.md
            cat target/static_analysis/clippy-second-run.log >> target/static_analysis/static_analysis_report.md
            echo '```' >> target/static_analysis/static_analysis_report.md
          else
            echo "No Clippy results found." >> target/static_analysis/static_analysis_report.md
          fi
          
          echo "" >> target/static_analysis/static_analysis_report.md
          echo "## Formatting Results" >> target/static_analysis/static_analysis_report.md
          echo '```' >> target/static_analysis/static_analysis_report.md
          cargo fmt --all -- --check 2>&1 || echo "Formatting issues found." >> target/static_analysis/static_analysis_report.md
          echo '```' >> target/static_analysis/static_analysis_report.md
      
      - name: Upload analysis report
        uses: actions/upload-artifact@v4
        with:
          name: static-analysis-report
          path: |
            target/static_analysis/static_analysis_report.md
            target/static_analysis/clippy-*.log
          if-no-files-found: ignore